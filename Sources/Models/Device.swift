//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

/** Token model */
public class Device: APIModel {

    public var deviceId: String?

    public var deviceToken: String?

    public var deviceType: String?

    public var osVersion: String?

    public var platform: String?

    public init(deviceId: String? = nil, deviceToken: String? = nil, deviceType: String? = nil, osVersion: String? = nil, platform: String? = nil) {
        self.deviceId = deviceId
        self.deviceToken = deviceToken
        self.deviceType = deviceType
        self.osVersion = osVersion
        self.platform = platform
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        deviceId = try container.decodeIfPresent("device_id")
        deviceToken = try container.decodeIfPresent("device_token")
        deviceType = try container.decodeIfPresent("device_type")
        osVersion = try container.decodeIfPresent("os_version")
        platform = try container.decodeIfPresent("platform")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(deviceId, forKey: "device_id")
        try container.encodeIfPresent(deviceToken, forKey: "device_token")
        try container.encodeIfPresent(deviceType, forKey: "device_type")
        try container.encodeIfPresent(osVersion, forKey: "os_version")
        try container.encodeIfPresent(platform, forKey: "platform")
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? Device else { return false }
      guard self.deviceId == object.deviceId else { return false }
      guard self.deviceToken == object.deviceToken else { return false }
      guard self.deviceType == object.deviceType else { return false }
      guard self.osVersion == object.osVersion else { return false }
      guard self.platform == object.platform else { return false }
      return true
    }

    public static func == (lhs: Device, rhs: Device) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
